
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include "keys.h"                                      // key-position labels
#define KEYS_L LN0 LN1 LN2 LN3 LN4 LN5 \
               LT0 LT1 LT2 LT3 LT4 LT5 \
               LM0 LM1 LM2 LM3 LM4 LM5 \
               LB0 LB1 LB2 LB3 LB4 LB5
#define KEYS_R RN0 RN1 RN2 RN3 RN4 RN5 \
               RT0 RT1 RT2 RT3 RT4 RT5 \
               RM0 RM1 RM2 RM3 RM4 RM5 \
               RB0 RB1 RB2 RB3 RB4 RB5
#define THUMBS_L LHT0 LHT1 LHM0 LHB0 LHB1 LHB2
#define THUMBS_R RHT0 RHT1 RHM0 RHB0 RHB1 RHB2

#define THUMBS THUMBS_L THUMBS_R

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>

// DEFAULT LAYOUT LEFT
//                       |-------------|------------|------------|------------|------------|
#define DEF_NUMROW_LEFT   &kp N1        &kp N2       &kp N3       &kp N4       &kp N5
//                       |-------------|------------|------------|------------|------------|
#define DEF_TOPROW_LEFT   &lt 3 Q       &kp W        &kp E        &kp R        &kp T
//                       |-------------|------------|------------|------------|------------|
#define DEF_MIDROW_LEFT   &lt 3 A       &lhm LWIN S  &lhm LALT D  &lhm LCTRL F &lt 4 G      
//                       |-------------|------------|------------|------------|------------|
#define DEF_BOTROW_LEFT   &kp Z         &kp X        &kp C        &lt 1 V      &kp B
//                       |-------------|------------|------------|------------|------------|
#define DEF_THUMBS_LEFT   &none         &sl 2        &sk LEFT_SHIFT

// DEFAULT LAYOUT RIGHT
//                       |-------------|------------|------------|------------|------------|
#define DEF_NUMROW_RIGHT  &kp N6        &kp N7       &kp N8       &kp N9       &kp N0  
//                       |-------------|------------|------------|------------|------------|
#define DEF_TOPROW_RIGHT  &kp Y         &kp U        &kp I        &kp O        &lt 4 P
//                       |-------------|------------|------------|------------|------------|
#define DEF_MIDROW_RIGHT  &lt 3 H       &rhm RCTRL J &rhm LALT K  &rhm RWIN L  &kp BACKSPACE
//                       |-------------|------------|------------|------------|------------|
#define DEF_BOTROW_RIGHT  &kp N         &kp M        &kp COMMA    &kp DOT      &kp TAB
//                       |-------------|------------|------------|------------|------------|
#define DEF_THUMBS_RIGHT                      &hm RSHIFT LC(LBKT) &lt 2 SPACE  &none

// ###############################################################################

// NUM LAYOUT LEFT
//                       |-------------|------------|------------|------------|------------|
#define NUM_NUMROW_LEFT   &kp N1        &kp N2       &kp N3       &kp N4       &kp N5
//                       |-------------|------------|------------|------------|------------|
#define NUM_TOPROW_LEFT   &kp F1        &kp F2       &kp F3       &kp F4       &kp   F5
//                       |-------------|------------|------------|------------|------------|
#define NUM_MIDROW_LEFT   &kp F6        &lhm LWIN F7 &lhm LALT F8 &lhm LCTRL F9 &lt 3 F10
//                       |-------------|------------|------------|------------|------------|
#define NUM_BOTROW_LEFT   &kp F11       &kp F12      &kp F13     &kp F14       &kp F15
//                       |-------------|------------|------------|------------|------------|
#define NUM_THUMBS_LEFT   &to 0         &none        &trans

// NUM LAYOUT RIGHT
//                       |-------------|------------|------------|------------|------------|
#define NUM_NUMROW_RIGHT  &kp N6        &kp N7       &kp N8       &kp N9       &kp N0  
//                       |-------------|------------|------------|------------|------------|
#define NUM_TOPROW_RIGHT  &none         &kp N7       &kp N8       &kp N9       &none
//                       |-------------|------------|------------|------------|------------|
#define NUM_MIDROW_RIGHT  &to 0         &rhm RCTRL N4 &rhm LALT N5 &rhm LWIN N6 &trans
//                       |-------------|------------|------------|------------|------------|
#define NUM_BOTROW_RIGHT  &kp N0        &kp N1       &kp N2       &kp N3       &trans
//                       |-------------|------------|------------|------------|------------|
#define NUM_THUMBS_RIGHT                             &trans       &none        &to 0

// ###############################################################################

// SYM LAYOUT LEFT
//                       |-------------|------------|------------|------------|------------|
#define SYM_NUMROW_LEFT   &kp N1        &kp N2       &kp N3       &kp N4       &kp N5
//                       |-------------|------------|------------|------------|------------|
#define SYM_TOPROW_LEFT   &kp PERCENT   &kp LPAR     &kp RPAR     &kp SEMICOLON &kp CARET
//                       |-------------|------------|------------|------------|------------|
#define SYM_MIDROW_LEFT   &kp QUESTION  &lhm LWIN LBKT &lhm LALT RBKT &lhm LCTRL COLON &kp SLASH 
//                       |-------------|------------|------------|------------|------------|
#define SYM_BOTROW_LEFT   &kp AT_SIGN   &kp  LBRC    &kp RBRC     &kp DOLLAR   &kp TILDE
//                       |-------------|------------|------------|------------|------------|
#define SYM_THUMBS_LEFT   &none         &none        &caps_word

// SYM LAYOUT RIGHT
//                       |-------------|------------|------------|------------|------------|
#define SYM_NUMROW_RIGHT  &kp N6        &kp N7       &kp N8       &kp N9       &kp N0  
//                       |-------------|------------|------------|------------|------------|
#define SYM_TOPROW_RIGHT  &kp AMPERSAND &kp DOUBLE_QUOTES &kp LESS_THAN  &kp GREATER_THAN &kp SINGLE_QUOTE
//                       |-------------|------------|------------|------------|------------|
#define SYM_MIDROW_RIGHT  &kp HASH      &rhm RCTRL EQUAL &rhm LALT PLUS &rhm LWIN STAR &kp EXCLAMATION
//                       |-------------|------------|------------|------------|------------|
#define SYM_BOTROW_RIGHT  &kp MINUS     &kp UNDERSCORE &kp GRAVE  &kp PIPE     &kp BACKSLASH
//                       |-------------|------------|------------|------------|------------|
#define SYM_THUMBS_RIGHT                             &caps_word   &kp ENTER    &none

// ###############################################################################

// NAV LAYOUT LEFT
//                       |-------------|------------|------------|------------|------------|
#define NAV_NUMROW_LEFT   &kp N1        &kp N2       &kp N3       &kp N4       &kp N5
//                       |-------------|------------|------------|------------|------------|
#define NAV_TOPROW_LEFT   &none         &none        &none        &none        &none
//                       |-------------|------------|------------|------------|------------|
#define NAV_MIDROW_LEFT   &none         &kp LWIN     &kp LALT     &kp LCTRL    &none         
//                       |-------------|------------|------------|------------|------------|
#define NAV_BOTROW_LEFT   &none         &none        &none        &none        &none         
//                       |-------------|------------|------------|------------|------------|
#define NAV_THUMBS_LEFT   &none         &none        &trans       

// NAV LAYOUT RIGHT
//                       |-------------|------------|------------|------------|------------|
#define NAV_NUMROW_RIGHT  &kp N6        &kp N7       &kp N8       &kp N9       &kp N0  
//                       |-------------|------------|------------|------------|------------|
#define NAV_TOPROW_RIGHT  &kp HOME      &kp PG_DN    &kp PG_UP    &kp END      &none
//                       |-------------|------------|------------|------------|------------|
#define NAV_MIDROW_RIGHT  &kp LEFT      &kp DOWN     &kp UP       &kp RIGHT    &trans
//                       |-------------|------------|------------|------------|------------|
#define NAV_BOTROW_RIGHT  &none         &kp ESCAPE   &none        &none        &trans
//                       |-------------|------------|------------|------------|------------|
#define NAV_THUMBS_RIGHT                             &trans       &none        &none

// ###############################################################################

// ITL LAYOUT LEFT
//                       |-------------|------------|------------|------------|------------|
#define ITL_NUMROW_LEFT   &kp N1        &kp N2       &kp N3       &kp N4       &kp N5
//                       |-------------|------------|------------|------------|------------|
#define ITL_TOPROW_LEFT   &none         &kp RA(S)    &kp RA(Y)    &kp RA(P)     &kp RA(Q)
//                       |-------------|------------|------------|------------|------------|
#define ITL_MIDROW_LEFT   &none         &kp LWIN     &kp LALT     &kp LCTRL    &none         
//                       |-------------|------------|------------|------------|------------|
#define ITL_BOTROW_LEFT   &none         &none        &none        &none        &none         
//                       |-------------|------------|------------|------------|------------|
#define ITL_THUMBS_LEFT   &none         &none        &trans

// ITL LAYOUT RIGHT
//                       |-------------|------------|------------|------------|------------|
#define ITL_NUMROW_RIGHT  &kp N6        &kp N7       &kp N8       &kp N9       &kp N0  
//                       |-------------|------------|------------|------------|------------|
#define ITL_TOPROW_RIGHT  &kp RA(Q)     &kp RA(P)    &kp RA(Y)    &kp RA(S)    &none
//                       |-------------|------------|------------|------------|------------|
#define ITL_MIDROW_RIGHT  &none         &kp RCTRL    &kp LALT     &kp RWIN     &trans
//                       |-------------|------------|------------|------------|------------|
#define ITL_BOTROW_RIGHT  &none         &none        &none        &none        &trans
//                       |-------------|------------|------------|------------|------------|
#define ITL_THUMBS_RIGHT                             &trans       &none        &none

// ###############################################################################

// MSE LAYOUT LEFT
//                       |-------------|------------|------------|------------|------------|
#define MSE_NUMROW_LEFT   &kp N1        &kp N2       &kp N3       &kp N4       &kp N5
//                       |-------------|------------|------------|------------|------------|
#define MSE_TOPROW_LEFT   &none         &none        &mmv MOVE_UP &none        &msc MOVE_DOWN
//                       |-------------|------------|------------|------------|------------|
#define MSE_MIDROW_LEFT   &none         &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_RIGHT &msc MOVE_UP
//                       |-------------|------------|------------|------------|------------|
#define MSE_BOTROW_LEFT   &none         &none        &none        &none        &none         
//                       |-------------|------------|------------|------------|------------|
#define MSE_THUMBS_LEFT                              &none         &none        &trans       

// MSE LAYOUT RIGHT
//                       |-------------|------------|------------|------------|------------|
#define MSE_NUMROW_RIGHT  &kp N6        &kp N7       &kp N8       &kp N9       &kp N0  
//                       |-------------|------------|------------|------------|------------|
#define MSE_TOPROW_RIGHT  &none         &mkp LCLK    &mkp MCLK    &mkp RCLK    &none
//                       |-------------|------------|------------|------------|------------|
#define MSE_MIDROW_RIGHT  &none         &kp RCTRL    &kp LALT     &kp RWIN     &trans
//                       |-------------|------------|------------|------------|------------|
#define MSE_BOTROW_RIGHT  &none         &none        &none        &none        &trans
//                       |-------------|------------|------------|------------|------------|
#define MSE_THUMBS_RIGHT  &trans        &none        &none

// ###############################################################################

// BLT LAYOUT LEFT
//                       |-------------|------------|------------|------------|------------|
#define BLT_NUMROW_LEFT   &kp N1        &kp N2       &kp N3       &kp N4       &kp N5
//                       |-------------|------------|------------|------------|------------|
#define BLT_TOPROW_LEFT   &none         &sys_reset   &bootloader  &none         &none         
//                       |-------------|------------|------------|------------|------------|
#define BLT_MIDROW_LEFT   &none         &none        &none        &none        &none         
//                       |-------------|------------|------------|------------|------------|
#define BLT_BOTROW_LEFT   &none         &none        &none        &none        &none         
//                       |-------------|------------|------------|------------|------------|
#define BLT_THUMBS_LEFT                             &none         &none        &trans       

// BLT LAYOUT RIGHT
//                       |-------------|------------|------------|------------|------------|
#define BLT_NUMROW_RIGHT  &kp N6        &kp N7       &kp N8       &kp N9       &kp N0  
//                       |-------------|------------|------------|------------|------------|
#define BLT_TOPROW_RIGHT  &bt BT_CLR    &none        &bootloader  &sys_reset   &none
//                       |-------------|------------|------------|------------|------------|
#define BLT_MIDROW_RIGHT  &none         &none        &none        &none        &none
//                       |-------------|------------|------------|------------|------------|
#define BLT_BOTROW_RIGHT  &bt BT_SEL 0  &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4
//                       |-------------|------------|------------|------------|------------|
#define BLT_THUMBS_RIGHT  &trans        &none        &none

/ {
  behaviors {
    #include "macros.dtsi"
    #include "version.dtsi"

    lhm: left_homerow_mods {
        flavor = "balanced";
        tapping-term-ms = <350>;    // <---[[moderate duration]]
        quick-tap-ms = <0>;
        require-prior-idle-ms = <150>;
        compatible = "zmk,behavior-hold-tap";
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
        hold-trigger-key-positions = <KEYS_R THUMBS>;
        hold-trigger-on-release;
    };
    rhm: right_homerow_mods {
        flavor = "balanced";
        tapping-term-ms = <350>;    // <---[[moderate duration]]
        quick-tap-ms = <0>;
        require-prior-idle-ms = <150>;
        compatible = "zmk,behavior-hold-tap";
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
        hold-trigger-key-positions = <KEYS_L THUMBS>;
        hold-trigger-on-release;
    };
    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "balanced";
        bindings = <&kp>, <&kp>;
    };
  };
  combos {
      compatible = "zmk,combos";
      combo_esc {
          timeout-ms = <50>;
          key-positions = <LM3 LM4>;
          bindings = <&kp LC(LBKT)>;
      };
      combo_ae {
          timeout-ms = <50>;
          key-positions = <LT0 LT1>;
          bindings = <&kp RA(Q)>;
      };
      combo_oe {
          timeout-ms = <50>;
          key-positions = <LT1 LT2>;
          bindings = <&kp RA(P)>;
      };
      combo_ue {
          timeout-ms = <50>;
          key-positions = <LT2 LT3>;
          bindings = <&kp RA(Y)>;
      };
      combo_ss {
          timeout-ms = <50>;
          key-positions = <LT3 LT4>;
          bindings = <&kp RA(S)>;
      };
      combo_0 {
          timeout-ms = <50>;
          key-positions = <RB0 RB1>;
          bindings = <&kp N0>;
      };
      combo_1 {
          timeout-ms = <50>;
          key-positions = <RB1 RB2>;
          bindings = <&kp N1>;
      };
      combo_2 {
          timeout-ms = <50>;
          key-positions = <RB2 RB3>;
          bindings = <&kp N2>;
      };
      combo_3 {
          timeout-ms = <50>;
          key-positions = <RB3 RB4>;
          bindings = <&kp N3>;
      };
      combo_4 {
          timeout-ms = <50>;
          key-positions = <RM1 RM2>;
          bindings = <&kp N4>;
      };
      combo_5 {
          timeout-ms = <50>;
          key-positions = <RM2 RM3>;
          bindings = <&kp N5>;
      };
      combo_6 {
          timeout-ms = <50>;
          key-positions = <RM3 RM4>;
          bindings = <&kp N6>;
      };
      combo_7 {
          timeout-ms = <50>;
          key-positions = <RT1 RT2>;
          bindings = <&kp N7>;
      };
      combo_8 {
          timeout-ms = <50>;
          key-positions = <RT2 RT3>;
          bindings = <&kp N8>;
      };
      combo_9 {
          timeout-ms = <50>;
          key-positions = <RT3 RT4>;
          bindings = <&kp N9>;
      };
  };

  keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
  &none  DEF_NUMROW_LEFT       &tog 1                           &mo 3 DEF_NUMROW_RIGHT       &none
  &none  DEF_TOPROW_LEFT       &none                            &none DEF_TOPROW_RIGHT       &none
  &none  DEF_MIDROW_LEFT       &none &none &none    &none &none &none DEF_MIDROW_RIGHT       &none
  &none  DEF_BOTROW_LEFT                   &none    &none             DEF_BOTROW_RIGHT       &none
  &mo 2  &none &none &none DEF_THUMBS_LEFT &none    &none DEF_THUMBS_RIGHT &none &none &none &none
            >;
        };

        layer_num {
            bindings = <
  &none  NUM_NUMROW_LEFT       &tog 1                           &mo 3 NUM_NUMROW_RIGHT       &none
  &none  NUM_TOPROW_LEFT       &none                            &none NUM_TOPROW_RIGHT       &none
  &none  NUM_MIDROW_LEFT       &none &none &none    &none &none &none NUM_MIDROW_RIGHT       &none
  &none  NUM_BOTROW_LEFT                   &none    &none             NUM_BOTROW_RIGHT       &none
  &mo 2  &none &none &none NUM_THUMBS_LEFT &none    &none NUM_THUMBS_RIGHT &none &none &none &none
            >;
        };

        layer_sym {
            bindings = <
  &none  SYM_NUMROW_LEFT       &tog 1                           &mo 3 SYM_NUMROW_RIGHT       &none
  &none  SYM_TOPROW_LEFT       &none                            &none SYM_TOPROW_RIGHT       &none
  &none  SYM_MIDROW_LEFT       &none &none &none    &none &none &none SYM_MIDROW_RIGHT       &none
  &none  SYM_BOTROW_LEFT                   &none    &none             SYM_BOTROW_RIGHT       &none
  &mo 2  &none &none &none SYM_THUMBS_LEFT &none    &none SYM_THUMBS_RIGHT &none &none &none &none
            >;
        };

        layer_int {
            bindings = <
  &none  ITL_NUMROW_LEFT       &tog 1                           &mo 3 ITL_NUMROW_RIGHT       &none
  &none  ITL_TOPROW_LEFT       &none                            &none ITL_TOPROW_RIGHT       &none
  &none  ITL_MIDROW_LEFT       &none &none &none    &none &none &none ITL_MIDROW_RIGHT       &none
  &none  ITL_BOTROW_LEFT                   &none    &none             ITL_BOTROW_RIGHT       &none
  &mo 2  &none &none &none ITL_THUMBS_LEFT &none    &none ITL_THUMBS_RIGHT &none &none &none &none
            >;
        };

        layer_nav {
            bindings = <
  &none  NAV_NUMROW_LEFT       &tog 1                           &mo 3 NAV_NUMROW_RIGHT       &none
  &none  NAV_TOPROW_LEFT       &none                            &none NAV_TOPROW_RIGHT       &none
  &none  NAV_MIDROW_LEFT       &none &none &none    &none &none &none NAV_MIDROW_RIGHT       &none
  &none  NAV_BOTROW_LEFT                   &none    &none             NAV_BOTROW_RIGHT       &none
  &mo 2  &none &none &none NAV_THUMBS_LEFT &none    &none NAV_THUMBS_RIGHT &none &none &none &none
            >;
        };

        layer_mse {
            bindings = <
  &none  MSE_NUMROW_LEFT        &tog 1                           &mo 3 MSE_NUMROW_RIGHT        &none
  &none &none &none &none &none &none                            &none &none &none &none &none &none
  &none &none &none &none &none &none &none &none    &none &none &none &none &none &none &none &none
  &none &none &none &none &none &none       &none    &none       &none &none &none &none &none &none
  &mo 2 &none &none &none &none &none &none &none    &none &none &none &none &none &none &none &none
            >;
        };

        layer_blt {
            bindings = <
  &none  BLT_NUMROW_LEFT       &tog 1                           &mo 3 BLT_NUMROW_RIGHT       &none
  &none  BLT_TOPROW_LEFT       &none                            &none BLT_TOPROW_RIGHT       &none
  &none  BLT_MIDROW_LEFT       &none &none &none    &none &none &none BLT_MIDROW_RIGHT       &none
  &none  BLT_BOTROW_LEFT                   &none    &none             BLT_BOTROW_RIGHT       &none
  &mo 2  &none &none &none BLT_THUMBS_LEFT &none    &none BLT_THUMBS_RIGHT &none &none &none &none
            >;
        };
    };
};

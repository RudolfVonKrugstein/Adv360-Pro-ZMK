
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include "keys.h"                                      // key-position labels
#define KEYS_L LN0 LN1 LN2 LN3 LN4 LN5 \
               LT0 LT1 LT2 LT3 LT4 LT5 \
               LM0 LM1 LM2 LM3 LM4 LM5 \
               LB0 LB1 LB2 LB3 LB4 LB5
#define KEYS_R RN0 RN1 RN2 RN3 RN4 RN5 \
               RT0 RT1 RT2 RT3 RT4 RT5 \
               RM0 RM1 RM2 RM3 RM4 RM5 \
               RB0 RB1 RB2 RB3 RB4 RB5
#define THUMBS_L LHT0 LHT1 LHM0 LHB0 LHB1 LHB2
#define THUMBS_R RHT0 RHT1 RHM0 RHB0 RHB1 RHB2

#define THUMBS THUMBS_L THUMBS_R

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
  behaviors {
    #include "macros.dtsi"
    #include "version.dtsi"

    lhm: left_homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        #binding-cells = <2>;
        tapping-term-ms = <200>;    // <---[[moderate duration]]
        quick-tap-ms = <0>;
        flavor = "balanced";
        bindings = <&kp>, <&kp>;
        hold-trigger-key-positions = <KEYS_R THUMBS_R>;
        hold-trigger-on-release;
    };
    rhm: right_homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        #binding-cells = <2>;
        tapping-term-ms = <200>;    // <---[[moderate duration]]
        quick-tap-ms = <0>;
        flavor = "balanced";
        bindings = <&kp>, <&kp>;
        hold-trigger-key-positions = <KEYS_L THUMBS_L>;
        hold-trigger-on-release;
    };
    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "balanced";
        bindings = <&kp>, <&kp>;
    };
  };
  combos {
      compatible = "zmk,combos";
      combo_esc {
          timeout-ms = <50>;
          key-positions = <LM3 LM4>;
          bindings = <&kp LC(LBKT)>;
      };
      combo_ae {
          timeout-ms = <50>;
          key-positions = <LT0 LT1>;
          bindings = <&kp RA(Q)>;
      };
      combo_oe {
          timeout-ms = <50>;
          key-positions = <LT1 LT2>;
          bindings = <&kp RA(P)>;
      };
      combo_ue {
          timeout-ms = <50>;
          key-positions = <LT2 LT3>;
          bindings = <&kp RA(Y)>;
      };
      combo_ss {
          timeout-ms = <50>;
          key-positions = <LT3 LT4>;
          bindings = <&kp RA(S)>;
      };
      combo_0 {
          timeout-ms = <50>;
          key-positions = <RB0 RB1>;
          bindings = <&kp N0>;
      };
      combo_1 {
          timeout-ms = <50>;
          key-positions = <RB1 RB2>;
          bindings = <&kp N1>;
      };
      combo_2 {
          timeout-ms = <50>;
          key-positions = <RB2 RB3>;
          bindings = <&kp N2>;
      };
      combo_3 {
          timeout-ms = <50>;
          key-positions = <RB3 RB4>;
          bindings = <&kp N3>;
      };
      combo_4 {
          timeout-ms = <50>;
          key-positions = <RM1 RM2>;
          bindings = <&kp N4>;
      };
      combo_5 {
          timeout-ms = <50>;
          key-positions = <RM2 RM3>;
          bindings = <&kp N5>;
      };
      combo_6 {
          timeout-ms = <50>;
          key-positions = <RM3 RM4>;
          bindings = <&kp N6>;
      };
      combo_7 {
          timeout-ms = <50>;
          key-positions = <RT1 RT2>;
          bindings = <&kp N7>;
      };
      combo_8 {
          timeout-ms = <50>;
          key-positions = <RT2 RT3>;
          bindings = <&kp N8>;
      };
      combo_9 {
          timeout-ms = <50>;
          key-positions = <RT3 RT4>;
          bindings = <&kp N9>;
      };
  };

  keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
  &none  &kp N1      &kp N2      &kp N3      &kp N4        &kp N5       &tog 1                                                                      &mo 3       &kp N6   &kp N7        &kp N8      &kp N9      &kp N0        &none
  &none  &lt 3 Q     &kp W       &kp E       &kp R         &kp T        &none                                                                       &none       &kp Y    &kp U         &kp I       &kp O       &lt 4 P       &none
  &none  &lt 3 A     &lhm LWIN S &lhm LALT D &lhm LCTRL F  &lt 4 G      &none    &none          &none                   &none  &none                &none       &lt 3 H  &rhm RCTRL J  &rhm LALT K &rhm RWIN L &kp BACKSPACE &none
  &none  &kp Z       &kp X       &kp C       &lt 1 V       &kp B                                &none                   &none                                   &kp N    &kp M         &kp COMMA   &kp DOT     &kp TAB       &none
  &mo 2  &none       &none       &none       &none                      &sl 2    &sk LEFT_SHIFT &none                   &none  &hm RSHIFT LC(LBKT)  &lt 2 SPACE          &none         &none       &none       &none         &none
            >;
        };

        layer_num {
            bindings = <
 &none &none &none    &none    &none     &none &none                                      &mo 3 &kp F6 &kp F7        &kp F8       &kp F9       &kp F10   &kp F11
 &none &none &none    &none    &none     &none &none                                      &none &none  &kp N7        &kp N8       &kp N9       &none     &kp F12
 &none &none &kp LWIN &kp LALT &kp LCTRL &none &none &none &none              &none &none &none &none  &rhm RCTRL N4 &rhm LALT N5 &rhm LWIN N6 &trans    &none
 &none &none &none    &none    &none     &none             &none              &none             &kp N0 &kp N1        &kp N2       &kp N3       &trans    &none
 &mo 2 &none &none    &none    &none           &none &none &none              &none &none &none        &none         &none        &none        &none     &mo 2
            >;
        };

        layer_sym {
            bindings = <
 &trans        &kp F1                     &kp F2                      &kp F3           &kp F4     &kp F5                &trans                                                             &trans         &kp F6             &kp F7         &kp F8            &kp F9            &kp F10 &kp F11
 &trans   &kp PERCENT       &kp LEFT_PARENTHESIS       &kp RIGHT_PARENTHESIS    &kp SEMICOLON  &kp CARET                &trans                                                             &trans  &kp AMPERSAND  &kp DOUBLE_QUOTES  &kp LESS_THAN  &kp GREATER_THAN  &kp SINGLE_QUOTE  &kp F12
 &trans  &kp QUESTION  &lhm LEFT_WIN LEFT_BRACKET  &lhm LEFT_ALT RIGHT_BRACKET  &lhm LCTRL COLON  &kp SLASH                &trans      &trans      &trans                  &trans      &trans     &trans       &kp HASH    &rhm RCTRL EQUAL  &rhm RALT PLUS     &rhm RWIN STAR   &kp EXCLAMATION  &trans
 &trans   &kp AT_SIGN             &kp LEFT_BRACE             &kp RIGHT_BRACE       &kp DOLLAR  &kp TILDE                                        &trans                  &trans                             &kp MINUS     &kp UNDERSCORE      &kp GRAVE          &kp PIPE     &kp BACKSLASH  &trans
 &trans        &trans                     &trans                      &trans           &trans             &kp LC(LEFT_BRACKET)      &caps_word  &trans                  &trans  &caps_word  &kp ENTER                            &trans         &trans            &trans            &trans  &trans
            >;
        };

        layer_int {
            bindings = <
 &none &none &none     &none     &none     &none     &none                                      &mo 3 &none &none &none &none &none &none
 &none &none &kp RA(S) &kp RA(Y) &kp RA(P) &kp RA(Q) &none                                      &none &none &none &none &none &none &none
 &none &none &none     &none     &none     &none     &none &none &none              &none &none &none &none &none &none &none &none &none
 &none &none &none     &none     &none     &none                 &none              &none             &none &none &none &none &none &none
 &mo 2 &none &none     &none     &none               &none &none &none              &none &none &none       &none &none &none &none &mo 2
            >;
        };

        layer_nav {
            bindings = <
 &trans  &trans        &trans    &trans     &trans  &trans            &trans                                                  &trans          &trans          &trans                &trans           &trans  &trans  &trans
 &trans  &trans        &trans    &trans     &trans  &trans            &trans                                                  &trans        &kp HOME       &kp PG_DN             &kp PG_UP          &kp END  &trans  &trans
 &trans  &trans  &kp LEFT_WIN  &kp LALT  &kp LCTRL  &trans            &trans  &trans  &trans                  &trans  &trans  &trans  &kp LEFT_ARROW  &kp DOWN_ARROW          &kp UP_ARROW  &kp RIGHT_ARROW  &trans  &trans
 &trans  &trans        &trans    &trans     &trans  &trans                            &trans                  &trans                          &trans         &kp ESC  &kp LC(LEFT_BRACKET)           &trans  &trans  &trans
 &trans  &trans        &trans    &trans     &trans                    &trans  &trans  &trans                  &trans  &trans  &trans                          &trans                &trans           &trans  &trans  &trans
            >;
        };
    };
};
